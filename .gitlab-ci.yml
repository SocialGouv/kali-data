---
stages:
  - Test
  - Release

.node_stage: &node_stage
  image: node:13-alpine
  before_script:
    - yarn --frozen-lockfile

UnitTest:
  <<: *node_stage
  stage: Test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - packages/api/node_modules/
      - packages/data/node_modules/
      - packages/generator/node_modules/
  script:
    - yarn test
  after_script:
    - npx codecov

E2eTest:
  <<: *node_stage
  stage: Test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - packages/api/node_modules/
      - packages/data/node_modules/
      - packages/generator/node_modules/
  before_script:
    - yarn start:docker
  script:
    - yarn test:e2e

Release:
  <<: *node_stage
  only:
    - master
  stage: Release
  before_script:
    - yarn --frozen-lockfile
    - yarn global add npx
    - apk update && apk add git
    - git config user.name "Social Groovy Bot"
    - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
    - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CI_PROJECT_PATH}.git
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
  script:
    - yarn data:update
    - |
      if [[ -n "$(git status -s ./data)" ]]; then
        echo "Files changed, checking JSON validity"
        # Check JSON files
        for filename in ./data/*\.json; do
          node "$filename" > /dev/null || {
            echo "Invalid JSON in $filename"
            exit 1
          }
        done
        echo "Commit files"
        # Commit files
        NOW=$(date +"%Y%m%d_%H%M")
        git add data
        git commit -m "feat(data): $NOW update"
        git push --no-verify origin HEAD:master
        npx semantic-release
      else
        echo "Nothing changed"
      fi
